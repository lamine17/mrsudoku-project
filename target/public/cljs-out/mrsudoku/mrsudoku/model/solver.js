// Compiled by ClojureScript 1.10.339 {}
goog.provide('mrsudoku.model.solver');
goog.require('cljs.core');
goog.require('cljs.test');
goog.require('mrsudoku.model.grid');
goog.require('mrsudoku.model.conflict');
mrsudoku.model.solver.to_var_block = (function mrsudoku$model$solver$to_var_block(grid,num){
cljs.core.println.call(null,".....");

var collig = new cljs.core.PersistentArrayMap(null, 6, [(1),mrsudoku.model.conflict.values.call(null,mrsudoku.model.grid.row.call(null,grid,(((((num - (1)) / (3)) | (0)) * (3)) + (1)))),(2),mrsudoku.model.conflict.values.call(null,mrsudoku.model.grid.row.call(null,grid,(((((num - (1)) / (3)) | (0)) * (3)) + (2)))),(3),mrsudoku.model.conflict.values.call(null,mrsudoku.model.grid.row.call(null,grid,(((((num - (1)) / (3)) | (0)) * (3)) + (3)))),(4),mrsudoku.model.conflict.values.call(null,mrsudoku.model.grid.col.call(null,grid,((cljs.core.mod.call(null,(num - (1)),(3)) * (3)) + (1)))),(5),mrsudoku.model.conflict.values.call(null,mrsudoku.model.grid.col.call(null,grid,((cljs.core.mod.call(null,(num - (1)),(3)) * (3)) + (2)))),(6),mrsudoku.model.conflict.values.call(null,mrsudoku.model.grid.col.call(null,grid,((cljs.core.mod.call(null,(num - (1)),(3)) * (3)) + (3))))], null);
var pos = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [(7),null,(1),null,(4),null,(6),null,(3),null,(2),null,(9),null,(5),null,(8),null], null), null);
var block = mrsudoku.model.conflict.values.call(null,mrsudoku.model.grid.block.call(null,grid,num));
var b = mrsudoku.model.grid.block.call(null,grid,num);
var index = (1);
var res = cljs.core.PersistentArrayMap.EMPTY;
while(true){
if(cljs.core.seq.call(null,b)){
if(cljs.core.not.call(null,mrsudoku.model.grid.cell_value.call(null,cljs.core.first.call(null,b)))){
var G__23453 = cljs.core.rest.call(null,b);
var G__23454 = (index + (1));
var G__23455 = cljs.core.assoc.call(null,res,cljs.core.keyword.call(null,["v",cljs.core.str.cljs$core$IFn$_invoke$arity$1(index)].join('')),clojure.set.difference.call(null,pos,clojure.set.union.call(null,cljs.core.get.call(null,collig,((((index - (1)) / (3)) | (0)) + (1))),cljs.core.get.call(null,collig,(cljs.core.mod.call(null,(index - (1)),(3)) + (4))),block)));
b = G__23453;
index = G__23454;
res = G__23455;
continue;
} else {
var G__23456 = cljs.core.rest.call(null,b);
var G__23457 = (index + (1));
var G__23458 = res;
b = G__23456;
index = G__23457;
res = G__23458;
continue;
}
} else {
return res;
}
break;
}
});
mrsudoku.model.solver.grid = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null,(5)),mrsudoku.model.grid.mk_cell.call(null,(3)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(6)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(9)),mrsudoku.model.grid.mk_cell.call(null,(8))], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(7)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(1)),mrsudoku.model.grid.mk_cell.call(null,(9)),mrsudoku.model.grid.mk_cell.call(null,(5)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null)], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(6)),mrsudoku.model.grid.mk_cell.call(null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null,(8)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(4)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(7)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null)], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(6)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(8)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_ceintll.call(null,(3)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(2)),mrsudoku.model.grid.mk_cell.call(null)], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(3)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(1)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(6))], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(6)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null)], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(4)),mrsudoku.model.grid.mk_cell.call(null,(1)),mrsudoku.model.grid.mk_cell.call(null,(9)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(8)),mrsudoku.model.grid.mk_cell.call(null)], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [mrsudoku.model.grid.mk_cell.call(null,(2)),mrsudoku.model.grid.mk_cell.call(null,(8)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(5)),mrsudoku.model.grid.mk_cell.call(null),mrsudoku.model.grid.mk_cell.call(null,(7)),mrsudoku.model.grid.mk_cell.call(null,(9))], null)], null)], null);
mrsudoku.model.solver.to_var_block.call(null,mrsudoku.model.solver.grid,(3));
/**
 * take a graph, a start summit, a set of visited summits and a match and return a flag indicated if the augment succeed or not
 */
mrsudoku.model.solver.augment = (function mrsudoku$model$solver$augment(graph,src,visited,match){
var dests = cljs.core.get.call(null,graph,src);
var visited__$1 = visited;
while(true){
if(cljs.core.seq.call(null,dests)){
var temp__5718__auto__ = cljs.core.get.call(null,match,cljs.core.first.call(null,dests));
if(cljs.core.truth_(temp__5718__auto__)){
var old_src = temp__5718__auto__;
var vec__23459 = mrsudoku.model.solver.augment.call(null,graph,old_src,cljs.core.conj.call(null,visited__$1,cljs.core.first.call(null,dests)),match);
var found = cljs.core.nth.call(null,vec__23459,(0),null);
var visited_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23459,(1),null);
var match_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23459,(2),null);
if(cljs.core.truth_(found)){
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,visited_SINGLEQUOTE_,cljs.core.assoc.call(null,match_SINGLEQUOTE_,cljs.core.first.call(null,dests),src)], null);
} else {
var G__23462 = cljs.core.rest.call(null,dests);
var G__23463 = visited_SINGLEQUOTE_;
dests = G__23462;
visited__$1 = G__23463;
continue;
}
} else {
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,cljs.core.conj.call(null,visited__$1,cljs.core.first.call(null,dests)),cljs.core.assoc.call(null,match,cljs.core.first.call(null,dests),src)], null);
}
} else {
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,visited__$1,match], null);
}
break;
}
});
mrsudoku.model.solver.augment_tests = (function mrsudoku$model$solver$augment_tests(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.augment_tests.cljs$lang$var);
});
mrsudoku.model.solver.augment_tests.cljs$lang$test = (function (){
try{var values__11659__auto___23467 = (new cljs.core.List(null,mrsudoku.model.solver.augment.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x1","x1",-1863922247),cljs.core.PersistentHashSet.EMPTY,cljs.core.PersistentArrayMap.EMPTY),(new cljs.core.List(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),new cljs.core.PersistentArrayMap(null, 1, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247)], null)], null),null,(1),null)),(2),null));
var result__11660__auto___23468 = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto___23467);
if(cljs.core.truth_(result__11660__auto___23468)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x1","x1",-1863922247),cljs.core.PersistentHashSet.EMPTY,cljs.core.PersistentArrayMap.EMPTY),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),new cljs.core.PersistentArrayMap(null, 1, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto___23467),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x1","x1",-1863922247),cljs.core.PersistentHashSet.EMPTY,cljs.core.PersistentArrayMap.EMPTY),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),new cljs.core.PersistentArrayMap(null, 1, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto___23467),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

}catch (e23464){var t__11704__auto___23469 = e23464;
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x1","x1",-1863922247),cljs.core.PersistentHashSet.EMPTY,cljs.core.PersistentArrayMap.EMPTY),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),new cljs.core.PersistentArrayMap(null, 1, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto___23469,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}
try{var values__11659__auto___23470 = (new cljs.core.List(null,mrsudoku.model.solver.augment.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),new cljs.core.PersistentArrayMap(null, 1, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247)], null)),(new cljs.core.List(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 2, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475)], null)], null),null,(1),null)),(2),null));
var result__11660__auto___23471 = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto___23470);
if(cljs.core.truth_(result__11660__auto___23471)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),new cljs.core.PersistentArrayMap(null, 1, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247)], null)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 2, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto___23470),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),new cljs.core.PersistentArrayMap(null, 1, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247)], null)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 2, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto___23470),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

}catch (e23465){var t__11704__auto___23472 = e23465;
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),new cljs.core.PersistentArrayMap(null, 1, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247)], null)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 2, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto___23472,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.augment.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 2, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475)], null)),(new cljs.core.List(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 3, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475),(4),new cljs.core.Keyword(null,"x3","x3",-1314178287)], null)], null),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 2, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475)], null)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 3, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475),(4),new cljs.core.Keyword(null,"x3","x3",-1314178287)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 2, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475)], null)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 3, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475),(4),new cljs.core.Keyword(null,"x3","x3",-1314178287)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23466){var t__11704__auto__ = e23466;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"augment","augment",-1384158176,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [(1),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 2, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475)], null)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(2),null], null), null),new cljs.core.PersistentArrayMap(null, 3, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475),(4),new cljs.core.Keyword(null,"x3","x3",-1314178287)], null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.augment_tests.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.augment_tests;},new cljs.core.Symbol("mrsudoku.model.solver","augment_tests","mrsudoku.model.solver/augment_tests",1354684169,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"augment_tests","augment_tests",-1011346269,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",23,1,85,85,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.augment_tests)?mrsudoku.model.solver.augment_tests.cljs$lang$test:null)]));
mrsudoku.model.solver.max_matching = (function mrsudoku$model$solver$max_matching(graph){
var summits = cljs.core.keys.call(null,graph);
var visited = cljs.core.PersistentHashSet.EMPTY;
var match = cljs.core.PersistentArrayMap.EMPTY;
while(true){
if(cljs.core.seq.call(null,summits)){
var vec__23473 = mrsudoku.model.solver.augment.call(null,graph,cljs.core.first.call(null,summits),visited,match);
var found = cljs.core.nth.call(null,vec__23473,(0),null);
var visited_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23473,(1),null);
var match_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23473,(2),null);
var G__23476 = cljs.core.rest.call(null,summits);
var G__23477 = visited_SINGLEQUOTE_;
var G__23478 = match_SINGLEQUOTE_;
summits = G__23476;
visited = G__23477;
match = G__23478;
continue;
} else {
return match;
}
break;
}
});
mrsudoku.model.solver.match_matching_tests = (function mrsudoku$model$solver$match_matching_tests(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.match_matching_tests.cljs$lang$var);
});
mrsudoku.model.solver.match_matching_tests.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.max_matching.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475),(4),new cljs.core.Keyword(null,"x3","x3",-1314178287)], null),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"max-matching","max-matching",1982198592,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null)),new cljs.core.PersistentArrayMap(null, 3, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475),(4),new cljs.core.Keyword(null,"x3","x3",-1314178287)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"max-matching","max-matching",1982198592,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null)),new cljs.core.PersistentArrayMap(null, 3, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475),(4),new cljs.core.Keyword(null,"x3","x3",-1314178287)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23479){var t__11704__auto__ = e23479;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"max-matching","max-matching",1982198592,null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"x1","x1",-1863922247),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [(1),null,(4),null,(43),null], null), null),new cljs.core.Keyword(null,"x2","x2",-1362513475),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(2),null], null), null),new cljs.core.Keyword(null,"x3","x3",-1314178287),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(4),null], null), null)], null)),new cljs.core.PersistentArrayMap(null, 3, [(1),new cljs.core.Keyword(null,"x1","x1",-1863922247),(2),new cljs.core.Keyword(null,"x2","x2",-1362513475),(4),new cljs.core.Keyword(null,"x3","x3",-1314178287)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.match_matching_tests.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.match_matching_tests;},new cljs.core.Symbol("mrsudoku.model.solver","match-matching_tests","mrsudoku.model.solver/match-matching_tests",-506997679,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"match-matching_tests","match-matching_tests",1993905963,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",30,1,98,98,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.match_matching_tests)?mrsudoku.model.solver.match_matching_tests.cljs$lang$test:null)]));
/**
 * Depth-First Search algorithm
 */
mrsudoku.model.solver.dfs = (function mrsudoku$model$solver$dfs(var_args){
var G__23481 = arguments.length;
switch (G__23481) {
case 4:
return mrsudoku.model.solver.dfs.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return mrsudoku.model.solver.dfs.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

mrsudoku.model.solver.dfs.cljs$core$IFn$_invoke$arity$4 = (function (graph,vert,f,init){
return cljs.core.first.call(null,mrsudoku.model.solver.dfs.call(null,graph,vert,f,init,cljs.core.PersistentHashSet.EMPTY));
});

mrsudoku.model.solver.dfs.cljs$core$IFn$_invoke$arity$5 = (function (graph,vert,f,init,visited){
if(cljs.core.truth_(visited.call(null,vert))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [init,visited], null);
} else {
var verts = cljs.core.get.call(null,graph,vert);
var res = f.call(null,init,vert);
var visited__$1 = cljs.core.conj.call(null,visited,vert);
while(true){
if(cljs.core.seq.call(null,verts)){
var vec__23482 = mrsudoku.model.solver.dfs.call(null,graph,cljs.core.first.call(null,verts),f,res,visited__$1);
var res_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23482,(0),null);
var visited_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23482,(1),null);
var G__23486 = cljs.core.rest.call(null,verts);
var G__23487 = res_SINGLEQUOTE_;
var G__23488 = visited_SINGLEQUOTE_;
verts = G__23486;
res = G__23487;
visited__$1 = G__23488;
continue;
} else {
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,visited__$1], null);
}
break;
}
}
});

mrsudoku.model.solver.dfs.cljs$lang$maxFixedArity = 5;

mrsudoku.model.solver.mygraph = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null], null), null),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"D","D",-8015893),null], null), null),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),null], null), null),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"I","I",1827140963),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"I","I",1827140963),null,new cljs.core.Keyword(null,"F","F",-1115543258),null], null), null)], null);
mrsudoku.model.solver.dfs_test = (function mrsudoku$model$solver$dfs_test(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.dfs_test.cljs$lang$var);
});
mrsudoku.model.solver.dfs_test.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.dfs.call(null,mrsudoku.model.solver.mygraph,new cljs.core.Keyword(null,"A","A",-1688942394),cljs.core.conj,cljs.core.PersistentHashSet.EMPTY),(new cljs.core.List(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null,"I","I",1827140963),null,new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null,new cljs.core.Keyword(null,"E","E",230849842),null,new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs","dfs",-1508720487,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Symbol(null,"conj","conj",-1127293942,null),cljs.core.PersistentHashSet.EMPTY),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null,"I","I",1827140963),null,new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null,new cljs.core.Keyword(null,"E","E",230849842),null,new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null)),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs","dfs",-1508720487,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Symbol(null,"conj","conj",-1127293942,null),cljs.core.PersistentHashSet.EMPTY),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null,"I","I",1827140963),null,new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null,new cljs.core.Keyword(null,"E","E",230849842),null,new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null)),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23489){var t__11704__auto__ = e23489;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs","dfs",-1508720487,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Symbol(null,"conj","conj",-1127293942,null),cljs.core.PersistentHashSet.EMPTY),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null,"I","I",1827140963),null,new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null,new cljs.core.Keyword(null,"E","E",230849842),null,new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null)),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.dfs_test.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.dfs_test;},new cljs.core.Symbol("mrsudoku.model.solver","dfs_test","mrsudoku.model.solver/dfs_test",-2026188465,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"dfs_test","dfs_test",337744613,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",18,1,119,119,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.dfs_test)?mrsudoku.model.solver.dfs_test.cljs$lang$test:null)]));
mrsudoku.model.solver.dfs_post = (function mrsudoku$model$solver$dfs_post(var_args){
var G__23491 = arguments.length;
switch (G__23491) {
case 4:
return mrsudoku.model.solver.dfs_post.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));

break;
case 5:
return mrsudoku.model.solver.dfs_post.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));

break;
default:
throw (new Error(["Invalid arity: ",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));

}
});

mrsudoku.model.solver.dfs_post.cljs$core$IFn$_invoke$arity$4 = (function (graph,vert,f,init){
return cljs.core.first.call(null,mrsudoku.model.solver.dfs_post.call(null,graph,vert,f,init,cljs.core.PersistentHashSet.EMPTY));
});

mrsudoku.model.solver.dfs_post.cljs$core$IFn$_invoke$arity$5 = (function (graph,vert,f,init,visited){
if(cljs.core.truth_(visited.call(null,vert))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [init,visited], null);
} else {
var verts = cljs.core.get.call(null,graph,vert);
var res = init;
var visited__$1 = cljs.core.conj.call(null,visited,vert);
while(true){
if(cljs.core.seq.call(null,verts)){
var vec__23492 = mrsudoku.model.solver.dfs_post.call(null,graph,cljs.core.first.call(null,verts),f,res,visited__$1);
var res_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23492,(0),null);
var visited_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23492,(1),null);
var G__23496 = cljs.core.rest.call(null,verts);
var G__23497 = res_SINGLEQUOTE_;
var G__23498 = visited_SINGLEQUOTE_;
verts = G__23496;
res = G__23497;
visited__$1 = G__23498;
continue;
} else {
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null,res,vert),visited__$1], null);
}
break;
}
}
});

mrsudoku.model.solver.dfs_post.cljs$lang$maxFixedArity = 5;

mrsudoku.model.solver.dfs_post_test = (function mrsudoku$model$solver$dfs_post_test(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.dfs_post_test.cljs$lang$var);
});
mrsudoku.model.solver.dfs_post_test.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.dfs_post.call(null,mrsudoku.model.solver.mygraph,new cljs.core.Keyword(null,"A","A",-1688942394),cljs.core.conj,cljs.core.List.EMPTY),(new cljs.core.List(null,cljs.core.list(new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.Keyword(null,"I","I",1827140963),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"E","E",230849842)),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs-post","dfs-post",-1078481643,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Symbol(null,"conj","conj",-1127293942,null),cljs.core.List.EMPTY),cljs.core.list(new cljs.core.Symbol(null,"quote","quote",1377916282,null),cljs.core.list(new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.Keyword(null,"I","I",1827140963),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"E","E",230849842)))),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs-post","dfs-post",-1078481643,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Symbol(null,"conj","conj",-1127293942,null),cljs.core.List.EMPTY),cljs.core.list(new cljs.core.Symbol(null,"quote","quote",1377916282,null),cljs.core.list(new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.Keyword(null,"I","I",1827140963),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"E","E",230849842)))),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23499){var t__11704__auto__ = e23499;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs-post","dfs-post",-1078481643,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Symbol(null,"conj","conj",-1127293942,null),cljs.core.List.EMPTY),cljs.core.list(new cljs.core.Symbol(null,"quote","quote",1377916282,null),cljs.core.list(new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.Keyword(null,"I","I",1827140963),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"E","E",230849842)))),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.dfs_post_test.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.dfs_post_test;},new cljs.core.Symbol("mrsudoku.model.solver","dfs-post_test","mrsudoku.model.solver/dfs-post_test",1861719547,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"dfs-post_test","dfs-post_test",-1014147951,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",23,1,132,132,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.dfs_post_test)?mrsudoku.model.solver.dfs_post_test.cljs$lang$test:null)]));
mrsudoku.model.solver.dfs_stack = (function mrsudoku$model$solver$dfs_stack(graph){
var verts = cljs.core.keys.call(null,graph);
var stack = cljs.core.List.EMPTY;
var visited = cljs.core.PersistentHashSet.EMPTY;
while(true){
if(cljs.core.seq.call(null,verts)){
var vec__23500 = mrsudoku.model.solver.dfs_post.call(null,graph,cljs.core.first.call(null,verts),cljs.core.conj,stack,visited);
var stack_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23500,(0),null);
var visited_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23500,(1),null);
var G__23503 = cljs.core.rest.call(null,verts);
var G__23504 = stack_SINGLEQUOTE_;
var G__23505 = visited_SINGLEQUOTE_;
verts = G__23503;
stack = G__23504;
visited = G__23505;
continue;
} else {
return stack;
}
break;
}
});
mrsudoku.model.solver.dfs_stack_test = (function mrsudoku$model$solver$dfs_stack_test(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.dfs_stack_test.cljs$lang$var);
});
mrsudoku.model.solver.dfs_stack_test.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.dfs_stack.call(null,mrsudoku.model.solver.mygraph),(new cljs.core.List(null,cljs.core.list(new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.Keyword(null,"I","I",1827140963)),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs-stack","dfs-stack",-388821643,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),cljs.core.list(new cljs.core.Symbol(null,"quote","quote",1377916282,null),cljs.core.list(new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.Keyword(null,"I","I",1827140963)))),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs-stack","dfs-stack",-388821643,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),cljs.core.list(new cljs.core.Symbol(null,"quote","quote",1377916282,null),cljs.core.list(new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.Keyword(null,"I","I",1827140963)))),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23506){var t__11704__auto__ = e23506;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"dfs-stack","dfs-stack",-388821643,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),cljs.core.list(new cljs.core.Symbol(null,"quote","quote",1377916282,null),cljs.core.list(new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327),new cljs.core.Keyword(null,"I","I",1827140963)))),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.dfs_stack_test.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.dfs_stack_test;},new cljs.core.Symbol("mrsudoku.model.solver","dfs-stack_test","mrsudoku.model.solver/dfs-stack_test",536669316,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"dfs-stack_test","dfs-stack_test",1928735794,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",24,1,144,144,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.dfs_stack_test)?mrsudoku.model.solver.dfs_stack_test.cljs$lang$test:null)]));
mrsudoku.model.solver.merge_edges = (function mrsudoku$model$solver$merge_edges(edges1,edges2){
var s = edges2;
var m = edges1;
while(true){
if(cljs.core.seq.call(null,s)){
var vec__23507 = cljs.core.first.call(null,s);
var k = cljs.core.nth.call(null,vec__23507,(0),null);
var v2 = cljs.core.nth.call(null,vec__23507,(1),null);
var temp__5718__auto__ = cljs.core.get.call(null,m,k);
if(cljs.core.truth_(temp__5718__auto__)){
var v1 = temp__5718__auto__;
var G__23510 = cljs.core.rest.call(null,s);
var G__23511 = cljs.core.assoc.call(null,m,k,clojure.set.union.call(null,v1,v2));
s = G__23510;
m = G__23511;
continue;
} else {
var G__23512 = cljs.core.rest.call(null,s);
var G__23513 = cljs.core.assoc.call(null,m,k,v2);
s = G__23512;
m = G__23513;
continue;
}
} else {
return m;
}
break;
}
});
mrsudoku.model.solver.merge_edges_test = (function mrsudoku$model$solver$merge_edges_test(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.merge_edges_test.cljs$lang$var);
});
mrsudoku.model.solver.merge_edges_test.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.merge_edges.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null)], null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null)], null),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"merge-edges","merge-edges",95594749,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"merge-edges","merge-edges",95594749,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23514){var t__11704__auto__ = e23514;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"merge-edges","merge-edges",95594749,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.merge_edges_test.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.merge_edges_test;},new cljs.core.Symbol("mrsudoku.model.solver","merge-edges_test","mrsudoku.model.solver/merge-edges_test",186975340,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"merge-edges_test","merge-edges_test",-1641298794,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",26,1,156,156,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.merge_edges_test)?mrsudoku.model.solver.merge_edges_test.cljs$lang$test:null)]));
mrsudoku.model.solver.sinks = (function mrsudoku$model$solver$sinks(graph,verts){
return cljs.core.reduce.call(null,(function (ngraph,vert){
if(cljs.core.contains_QMARK_.call(null,ngraph,vert)){
return ngraph;
} else {
return cljs.core.assoc.call(null,ngraph,vert,cljs.core.PersistentHashSet.EMPTY);
}
}),graph,verts);
});
mrsudoku.model.solver.sinks_test = (function mrsudoku$model$solver$sinks_test(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.sinks_test.cljs$lang$var);
});
mrsudoku.model.solver.sinks_test.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.mygraph,(new cljs.core.List(null,mrsudoku.model.solver.sinks.call(null,mrsudoku.model.solver.mygraph,new cljs.core.Keyword(null,"A","A",-1688942394)),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),cljs.core.list(new cljs.core.Symbol(null,"sinks","sinks",-1243609492,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394))),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),cljs.core.list(new cljs.core.Symbol(null,"sinks","sinks",-1243609492,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394))),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23515){var t__11704__auto__ = e23515;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),cljs.core.list(new cljs.core.Symbol(null,"sinks","sinks",-1243609492,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null),new cljs.core.Keyword(null,"A","A",-1688942394))),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.sinks_test.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.sinks_test;},new cljs.core.Symbol("mrsudoku.model.solver","sinks_test","mrsudoku.model.solver/sinks_test",-898258799,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"sinks_test","sinks_test",1064200251,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",20,1,162,162,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.sinks_test)?mrsudoku.model.solver.sinks_test.cljs$lang$test:null)]));
mrsudoku.model.solver.inv_edges = (function mrsudoku$model$solver$inv_edges(src,dests){
return cljs.core.zipmap.call(null,dests,cljs.core.repeat.call(null,cljs.core.PersistentHashSet.createAsIfByAssoc([src])));
});
mrsudoku.model.solver.inv_edges_test = (function mrsudoku$model$solver$inv_edges_test(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.inv_edges_test.cljs$lang$var);
});
mrsudoku.model.solver.inv_edges_test.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.inv_edges.call(null,new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null], null), null)),(new cljs.core.List(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null)], null),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"inv-edges","inv-edges",-419040004,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null], null), null)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"inv-edges","inv-edges",-419040004,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null], null), null)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23516){var t__11704__auto__ = e23516;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"inv-edges","inv-edges",-419040004,null),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"C","C",-173629587),null], null), null)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.inv_edges_test.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.inv_edges_test;},new cljs.core.Symbol("mrsudoku.model.solver","inv-edges_test","mrsudoku.model.solver/inv-edges_test",860272263,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"inv-edges_test","inv-edges_test",-1672710275,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",24,1,168,168,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.inv_edges_test)?mrsudoku.model.solver.inv_edges_test.cljs$lang$test:null)]));
/**
 * transpose a graph...
 */
mrsudoku.model.solver.transpose = (function mrsudoku$model$solver$transpose(graph){
var ks = cljs.core.keys.call(null,graph);
var res = cljs.core.PersistentArrayMap.EMPTY;
while(true){
if(cljs.core.seq.call(null,ks)){
var G__23517 = cljs.core.rest.call(null,ks);
var G__23518 = mrsudoku.model.solver.merge_edges.call(null,res,mrsudoku.model.solver.inv_edges.call(null,cljs.core.first.call(null,ks),cljs.core.first.call(null,ks).call(null,graph)));
ks = G__23517;
res = G__23518;
continue;
} else {
return mrsudoku.model.solver.sinks.call(null,res,cljs.core.keys.call(null,graph));
}
break;
}
});
mrsudoku.model.solver.transpose_test = (function mrsudoku$model$solver$transpose_test(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.transpose_test.cljs$lang$var);
});
mrsudoku.model.solver.transpose_test.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.transpose.call(null,mrsudoku.model.solver.mygraph),(new cljs.core.List(null,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"I","I",1827140963),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"D","D",-8015893),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"F","F",-1115543258),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"G","G",-738544397),null], null), null)]),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"transpose","transpose",1165804847,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"I","I",1827140963),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"D","D",-8015893),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"F","F",-1115543258),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"G","G",-738544397),null], null), null)])),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"transpose","transpose",1165804847,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"I","I",1827140963),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"D","D",-8015893),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"F","F",-1115543258),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"G","G",-738544397),null], null), null)])),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23519){var t__11704__auto__ = e23519;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"transpose","transpose",1165804847,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"I","I",1827140963),new cljs.core.Keyword(null,"A","A",-1688942394),new cljs.core.Keyword(null,"F","F",-1115543258),new cljs.core.Keyword(null,"D","D",-8015893),new cljs.core.Keyword(null,"B","B",-1422503380),new cljs.core.Keyword(null,"C","C",-173629587),new cljs.core.Keyword(null,"E","E",230849842),new cljs.core.Keyword(null,"G","G",-738544397),new cljs.core.Keyword(null,"H","H",-938148327)],[new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"C","C",-173629587),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"A","A",-1688942394),null,new cljs.core.Keyword(null,"B","B",-1422503380),null,new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"D","D",-8015893),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"F","F",-1115543258),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"G","G",-738544397),null], null), null)])),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.transpose_test.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.transpose_test;},new cljs.core.Symbol("mrsudoku.model.solver","transpose_test","mrsudoku.model.solver/transpose_test",-281060567,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"transpose_test","transpose_test",2050234947,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",24,1,179,179,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.transpose_test)?mrsudoku.model.solver.transpose_test.cljs$lang$test:null)]));
mrsudoku.model.solver.compute_scc = (function mrsudoku$model$solver$compute_scc(graph){
var stack = mrsudoku.model.solver.dfs_stack.call(null,graph);
var t_graph = mrsudoku.model.solver.transpose.call(null,graph);
var s = stack;
var visited = cljs.core.PersistentHashSet.EMPTY;
var res = cljs.core.PersistentVector.EMPTY;
while(true){
if(cljs.core.seq.call(null,s)){
if(cljs.core.truth_(visited.call(null,cljs.core.first.call(null,s)))){
var G__23523 = cljs.core.rest.call(null,s);
var G__23524 = visited;
var G__23525 = res;
s = G__23523;
visited = G__23524;
res = G__23525;
continue;
} else {
var vec__23520 = mrsudoku.model.solver.dfs_post.call(null,t_graph,cljs.core.first.call(null,s),cljs.core.conj,cljs.core.PersistentHashSet.EMPTY,visited);
var comp = cljs.core.nth.call(null,vec__23520,(0),null);
var visited_SINGLEQUOTE_ = cljs.core.nth.call(null,vec__23520,(1),null);
var G__23526 = cljs.core.rest.call(null,s);
var G__23527 = visited_SINGLEQUOTE_;
var G__23528 = cljs.core.conj.call(null,res,comp);
s = G__23526;
visited = G__23527;
res = G__23528;
continue;
}
} else {
return res;
}
break;
}
});
mrsudoku.model.solver.compute_scc_test = (function mrsudoku$model$solver$compute_scc_test(){
return cljs.test.test_var.call(null,mrsudoku.model.solver.compute_scc_test.cljs$lang$var);
});
mrsudoku.model.solver.compute_scc_test.cljs$lang$test = (function (){
try{var values__11659__auto__ = (new cljs.core.List(null,mrsudoku.model.solver.compute_scc.call(null,mrsudoku.model.solver.mygraph),(new cljs.core.List(null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"C","C",-173629587),null,new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"I","I",1827140963),null], null), null)], null),null,(1),null)),(2),null));
var result__11660__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__11659__auto__);
if(cljs.core.truth_(result__11660__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"compute-scc","compute-scc",-1198955295,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"C","C",-173629587),null,new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"I","I",1827140963),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__11659__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"compute-scc","compute-scc",-1198955295,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"C","C",-173629587),null,new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"I","I",1827140963),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),(new cljs.core.List(null,new cljs.core.Symbol(null,"not","not",1044554643,null),(new cljs.core.List(null,cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__11659__auto__),null,(1),null)),(2),null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__11660__auto__;
}catch (e23529){var t__11704__auto__ = e23529;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"compute-scc","compute-scc",-1198955295,null),new cljs.core.Symbol(null,"mygraph","mygraph",-1948040039,null)),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"A","A",-1688942394),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"B","B",-1422503380),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"D","D",-8015893),null,new cljs.core.Keyword(null,"C","C",-173629587),null,new cljs.core.Keyword(null,"E","E",230849842),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"F","F",-1115543258),null,new cljs.core.Keyword(null,"G","G",-738544397),null,new cljs.core.Keyword(null,"H","H",-938148327),null], null), null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"I","I",1827140963),null], null), null)], null)),new cljs.core.Keyword(null,"actual","actual",107306363),t__11704__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

mrsudoku.model.solver.compute_scc_test.cljs$lang$var = new cljs.core.Var(function(){return mrsudoku.model.solver.compute_scc_test;},new cljs.core.Symbol("mrsudoku.model.solver","compute-scc_test","mrsudoku.model.solver/compute-scc_test",842907415,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"mrsudoku.model.solver","mrsudoku.model.solver",-2076449403,null),new cljs.core.Symbol(null,"compute-scc_test","compute-scc_test",-1489799043,null),"/users/nfs/Etu1/3802151/3i020/mrsudoku-project/src/cljs/mrsudoku/model/solver.cljs",26,1,191,191,cljs.core.List.EMPTY,null,(cljs.core.truth_(mrsudoku.model.solver.compute_scc_test)?mrsudoku.model.solver.compute_scc_test.cljs$lang$test:null)]));
/**
 * Solve the sudoku `grid` by returing a full solved grid,
 *  or `nil` if the solver fails.
 */
mrsudoku.model.solver.solve = (function mrsudoku$model$solver$solve(grid){
return null;
});

//# sourceMappingURL=solver.js.map
